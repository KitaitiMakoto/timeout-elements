---
title: Timeout Elements
---

<h1>Timeout Elements</h1>

<h2>Timeout Anchor</h2>

<p>This extends <code>a</code>(anchor) element as Timeout Anchor.</p>
<p>After you hover over Timeout Ancor element for several seconds(3 seconds by default), it will be clicked automatically.</p>
<p>Live demos follow.</p>

<h3>Basic Usage</h3>

<p>Add <code>is</code> attribute whose value is <code>timeout-anchor</code> to extend <code>a</code> element. Hover over the element and wait for 3 seconds and then you will visit link target(the same page in this example) without click.</p>

<%= example <<EOC
<!-- Declare as "timeout-anchor" -->
<a is="timeout-anchor" href=".">
  timeout anchor
</a>
EOC
%>

<h3>Specifying timeout duration</h3>

<p>You may specify timeout duration by <code>timeout</code> attribute.</p>

<%= example <<EOC
<a is="timeout-anchor" href="." timeout="2">timeout in 2 seconds</a>
EOC
%>

<h3>Native anchor attributes</h3>

<p>Timeout Anchor is an Anchor, so you can use attributes for native <code>a</code> like <code>href</code> and <code>target</code>.</p>

<%= example <<EOC
<a is="timeout-anchor" href="." target="timing-anchor">opening in timing-anchor window</a>
EOC
%>

<h3>Horizontal bar indicator</h3>

<p>Indicator of timeout is gray arc spinner by default. You can use blue horizontal bar instead by setting <code>indicator</code> attribute to <code>horizontal-bar</code>. <code>indicator</code> for spinner is <code>spinner</code>.</p>

<%= example <<EOC
<!-- "horizontal-bar" indicator is also available -->
<a is="timeout-anchor" href="."
   indicator="horizontal-bar">
  horizontal bar indicator
</a>
EOC
%>

<h3>Custom indicator</h3>

<p>You can define and use your own indicator. Currently JavaScript is not supported. See comments in code below for more details.</p>

<%= example <<EOC
<template id="my-indicator">
  <style>
    :host .indicator {
      position: absolute; /* Highly recommended to set position to absolute */
      display: block;
      width: 6em;
      height: 1em;
    }
    :host .indicator[hidden] span {
      display: none;
    }
    :host .indicator span {
      width: 1em;
      height: 1em;
      color: green;
      opacity: 0;
    }
    :host .indicator span:nth-child(1) {
      -webkit-animation: reveal 3s infinite;
      animation: reveal 2s 0s infinite;
    }
    :host .indicator span:nth-child(2) {
      -webkit-animation: reveal 3s 1s infinite;
      animation: reveal 2s 2s infinite;
    }
    :host .indicator span:nth-child(3) {
      -webkit-animation: reveal 3s 2s infinite;
      animation: reveal 2s 4s infinite;
    }
    @-webkit-keyframes reveal {
      0%   { opacity: 0; }
      50%  { opacity: 1; }
      100% { opacity: 0; }
    }
    @keyframes reveal {
      0%   { opacity: 0; }
      50%  { opacity: 1; }
      100% { opacity: 0; }
    }
  </style>
  <!-- Indicator requries "indicator" class and "hidden" attribute -->
  <p class="indicator" hidden>
    <span>&#9679;</span>
    <span>&#9679;</span>
    <span>&#9679;</span>
  </p>
</template>

<!-- Set CSS selector for your template
     because it is passed to document.querySelector() -->
<a is="timeout-anchor" href="."
   indicator-template="#my-indicator"
   timeout="12">
  Custom indicator
</a>
EOC
%>

<h3>Case <code>a</code> has CSS position</h3>

<p>In this case, indicator is not at expected position. Welcome advice!</p>

<h3>Attributes</h3>

<dl>
  <dt>Native attributes</dt>
  <dd><code>&lt;a&gt;</code>'s native attributes such as <code>href</code>, <code>title</code>, <code>target</code> etc. are all available.</dd>
  <dt><code>state</code></dt>
  <dd><code>waiting</code> or <code>counting</code>. <code>waiting</code> means mouse pointer is not on the link. <code>counting</code> means mouse pinter is on the link and clicked automatically in secondes specified by <code>timeout</code> attribute.</dd>
  <dt><code>timeout</code></dt>
  <dd>Time to the link will be clicked automatically in seconds. Integer or Float. Defaults to <code>3</code>.</dd>
  <dt><code>indicator</code></dt>
  <dd>Indicator which is shown when mouse pointer is on the link and <code>state</code> is <code>couting</code>. <code>spinner</code> and <code>horizontal-bar</code> is available currently. Defaults to <code>spinner</code>.</dd>
  <dt><code>indicator-template</code></dt>
  <dd>CSS selector which specifies your own custom indicator. Value of this attribute is passed to <code>document.querySelector()</code>, so it must be valid selector.</dd>
</dl>

<h3>Events</h3>

<p>Timeout Anchor fires two types of custom events.</p>

<dl>
  <dt><code>countdown</code></dt>
  <dd>Fired when mouse pointer becomes on the link and count down started.</dd>
  <dt><code>countdowncanceled</code></dt>
  <dd>Fired when mouse pointer becomes out of the link and count down stopped.</dd>
</dl>

<%= example <<EOC
<p>Event(see console for event details): <span id="event-result">Not fired.</span></p>
<a is="timeout-anchor" id="fire-events" href="." timeout="12">
  Timeout Anchor may fire <code>countdown</code> or <code>countdowncanceld</code> events.
</a>
<script>
    document.addEventListener("DOMContentLoaded", function() {
        var result = document.getElementById("event-result");
        var anchor = document.getElementById("fire-events");
        ["countdown", "countdowncanceled"].forEach(function(eventName) {
            anchor.addEventListener(eventName, function(event) {
                result.textContent = eventName;
                console.info(eventName);
                console.dir(event);
            });
        });
    });
</script>
EOC
%>
